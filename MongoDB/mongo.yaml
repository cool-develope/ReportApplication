apiVersion: v1
kind: Namespace
metadata:
  name: mongo
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv-volume 
  labels:
    type: local
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - cool-node
  storageClassName: mongo 
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany 
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/home/jerry/BackTest-PipeLine/MongoDB/db_store" 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc-volume
  namespace: mongo
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: mongo
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongod
  namespace: mongo
  labels:
    role: mongo
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      role: mongo
  template:
    metadata:
      labels:
        role: mongo
        environment: test
        replicaset: MainRepSet
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongod-container
          image: mongo
          command:
            - "mongod"
            - "--bind_ip"
            - "0.0.0.0"
            - "--replSet"
            - "MainRepSet"
          resources:
            requests:
              cpu: 0.2
              memory: 200Mi
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-persistent-storage-claim
              mountPath: /data/db
      volumes:
        - name: mongodb-persistent-storage-claim
          persistentVolumeClaim:
            claimName: mongo-pvc-volume 